// Code generated by mockery v2.39.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	bobber "github.com/tylerdimon/bobber"
)

// WebsocketService is an autogenerated mock type for the WebsocketService type
type WebsocketService struct {
	mock.Mock
}

type WebsocketService_Expecter struct {
	mock *mock.Mock
}

func (_m *WebsocketService) EXPECT() *WebsocketService_Expecter {
	return &WebsocketService_Expecter{mock: &_m.Mock}
}

// AddClient provides a mock function with given fields: _a0
func (_m *WebsocketService) AddClient(_a0 bobber.Client) {
	_m.Called(_a0)
}

// WebsocketService_AddClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddClient'
type WebsocketService_AddClient_Call struct {
	*mock.Call
}

// AddClient is a helper method to define mock.On call
//   - _a0 bobber.Client
func (_e *WebsocketService_Expecter) AddClient(_a0 interface{}) *WebsocketService_AddClient_Call {
	return &WebsocketService_AddClient_Call{Call: _e.mock.On("AddClient", _a0)}
}

func (_c *WebsocketService_AddClient_Call) Run(run func(_a0 bobber.Client)) *WebsocketService_AddClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(bobber.Client))
	})
	return _c
}

func (_c *WebsocketService_AddClient_Call) Return() *WebsocketService_AddClient_Call {
	_c.Call.Return()
	return _c
}

func (_c *WebsocketService_AddClient_Call) RunAndReturn(run func(bobber.Client)) *WebsocketService_AddClient_Call {
	_c.Call.Return(run)
	return _c
}

// Broadcast provides a mock function with given fields: request
func (_m *WebsocketService) Broadcast(request *bobber.Request) {
	_m.Called(request)
}

// WebsocketService_Broadcast_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Broadcast'
type WebsocketService_Broadcast_Call struct {
	*mock.Call
}

// Broadcast is a helper method to define mock.On call
//   - request *bobber.Request
func (_e *WebsocketService_Expecter) Broadcast(request interface{}) *WebsocketService_Broadcast_Call {
	return &WebsocketService_Broadcast_Call{Call: _e.mock.On("Broadcast", request)}
}

func (_c *WebsocketService_Broadcast_Call) Run(run func(request *bobber.Request)) *WebsocketService_Broadcast_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*bobber.Request))
	})
	return _c
}

func (_c *WebsocketService_Broadcast_Call) Return() *WebsocketService_Broadcast_Call {
	_c.Call.Return()
	return _c
}

func (_c *WebsocketService_Broadcast_Call) RunAndReturn(run func(*bobber.Request)) *WebsocketService_Broadcast_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteClient provides a mock function with given fields: _a0
func (_m *WebsocketService) DeleteClient(_a0 bobber.Client) {
	_m.Called(_a0)
}

// WebsocketService_DeleteClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteClient'
type WebsocketService_DeleteClient_Call struct {
	*mock.Call
}

// DeleteClient is a helper method to define mock.On call
//   - _a0 bobber.Client
func (_e *WebsocketService_Expecter) DeleteClient(_a0 interface{}) *WebsocketService_DeleteClient_Call {
	return &WebsocketService_DeleteClient_Call{Call: _e.mock.On("DeleteClient", _a0)}
}

func (_c *WebsocketService_DeleteClient_Call) Run(run func(_a0 bobber.Client)) *WebsocketService_DeleteClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(bobber.Client))
	})
	return _c
}

func (_c *WebsocketService_DeleteClient_Call) Return() *WebsocketService_DeleteClient_Call {
	_c.Call.Return()
	return _c
}

func (_c *WebsocketService_DeleteClient_Call) RunAndReturn(run func(bobber.Client)) *WebsocketService_DeleteClient_Call {
	_c.Call.Return(run)
	return _c
}

// HandleMessages provides a mock function with given fields:
func (_m *WebsocketService) HandleMessages() {
	_m.Called()
}

// WebsocketService_HandleMessages_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'HandleMessages'
type WebsocketService_HandleMessages_Call struct {
	*mock.Call
}

// HandleMessages is a helper method to define mock.On call
func (_e *WebsocketService_Expecter) HandleMessages() *WebsocketService_HandleMessages_Call {
	return &WebsocketService_HandleMessages_Call{Call: _e.mock.On("HandleMessages")}
}

func (_c *WebsocketService_HandleMessages_Call) Run(run func()) *WebsocketService_HandleMessages_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *WebsocketService_HandleMessages_Call) Return() *WebsocketService_HandleMessages_Call {
	_c.Call.Return()
	return _c
}

func (_c *WebsocketService_HandleMessages_Call) RunAndReturn(run func()) *WebsocketService_HandleMessages_Call {
	_c.Call.Return(run)
	return _c
}

// NewWebsocketService creates a new instance of WebsocketService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewWebsocketService(t interface {
	mock.TestingT
	Cleanup(func())
}) *WebsocketService {
	mock := &WebsocketService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
